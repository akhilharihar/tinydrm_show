#!/usr/bin/env python3
import argparse
from pathlib import Path
from os import uname
import shutil
import stat


# Defaults
cwd = Path(__file__).parent.absolute()
DRV_INSTALL_DIR = Path(f'/lib/modules/{uname()[2]}/kernel/drivers/gpu/drm/tiny')
drvs = [x.stem for x in list(cwd.glob('drivers/*.c'))]
COMPILE_DRV = True

# CLI setup
parser = argparse.ArgumentParser(description='Build setup for tiny DRM display drivers and overlays')
parser.add_argument("drv", choices=drvs, help="Name of the DRM driver you want to build")
args = parser.parse_args()
drv_name = args.drv


build_dir = (cwd / "build")
if(build_dir.exists()):
    shutil.rmtree(build_dir)
build_dir.mkdir()

run_file = build_dir / "inst"

with open(run_file, "w") as f:
    content = """#!/bin/bash
if [ $UID -ne 0 ]
then
    echo "Run this script with sudo."
    exit $E_NOTROOT
fi\n
"""
    f.write(content)

run_file.chmod(run_file.stat().st_mode | stat.S_IXUSR | stat.S_IXGRP | stat.S_IXOTH)

# overlay config
(build_dir / "overlay").mkdir()
overlay_build_dir = build_dir / 'overlay'
makefile = f"all:\n\tdtc -@ -I dts -O dtb -o {overlay_build_dir/drv_name}.dtbo {cwd / 'overlays' /drv_name}.dts"
with open(overlay_build_dir / "Makefile", 'w') as f:
    f.write(makefile)

with open(run_file, 'a') as f:
    content = f"""\ncd overlay
make
if [[ -f ./{drv_name}.dtbo ]]
then
cp ./{drv_name}.dtbo /boot/overlays/
fi
cd ../
"""
    f.write(content)

# driver config
if drv_name in [x.stem for x in list(DRV_INSTALL_DIR.glob('*.ko'))]:
    COMPILE_DRV = False
    print("Display driver is already installed.")
else:
    drv_build_dir = build_dir / 'driver'
    (drv_build_dir).mkdir()
    shutil.copy(f"{cwd / 'drivers' / drv_name}.c", f"{drv_build_dir}")
    makefile = f"""KDIR := /lib/modules/`uname -r`/build
MODULES := {drv_name}.ko
obj-m += {drv_name}.o
all:
\t$(MAKE) -C $(KDIR) M=$(PWD) modules
clean:
\t$(MAKE) -C $(KDIR) M=$(PWD) clean
"""
    with open(drv_build_dir / "Makefile", 'w') as f:
        f.write(makefile)

    with open(run_file, 'a') as f:
        content = f"""if [[ ! -d /lib/modules/$(uname -r)/build ]]
then
    apt update
    apt install -y git bc bison flex libssl-dev libncurses5-dev
    wget https://raw.githubusercontent.com/RPi-Distro/rpi-source/master/rpi-source -O /usr/local/bin/rpi-source
    chmod +x /usr/local/bin/rpi-source
    /usr/local/bin/rpi-source -q --tag-update
    rpi-source
fi

cd driver
make
if [[ -f ./{drv_name}.ko ]]
then
cp ./{drv_name}.ko /lib/modules/$(uname -r)/kernel/drivers/gpu/drm/tiny/
depmod
fi
cd ../
"""
        f.write(content)

print("Build setup complete. run:\n", "============================", "cd build", "sudo ./compile", "============================\n", sep="\n")
